{"version":3,"sources":["components/UI/Card.js","components/Ingredients/IngredientForm.js","components/Ingredients/Search.js","components/Ingredients/IngredientList.js","components/Ingredients/Ingredients.js","App.js","index.js"],"names":["Card","props","className","children","IngredientForm","React","memo","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","value","onChange","target","Search","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","fetch","then","response","json","responseData","loadedIngredients","key","push","clearTimeout","ref","IngredientList","Ingredients","map","ig","onClick","onRemoveItem","bind","userIngredients","setUserIngredients","check","setCheck","filteredIngredientsHandler","useCallback","filterIngredients","list","ingredientId","method","prevIngredients","filter","ingredient","body","JSON","stringify","headers","name","App","ReactDOM","render","document","getElementById"],"mappings":"mTAQeA,EALF,SAAAC,GACX,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,EAAME,YCwDvBC,G,MAxDQC,IAAMC,MAAK,SAAAL,GAEhC,MAAwCM,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAyCF,mBAAS,IAAlD,mBAAOG,EAAP,KAAqBC,EAArB,KAUA,OACE,yBAAST,UAAU,kBAAnB,SAEE,cAAC,EAAD,UAEE,uBAAMU,SAbU,SAAAC,GACpBA,EAAMC,iBACNb,EAAMc,gBAAgB,CACpBC,MAAMR,EACNS,OAAOP,KASL,UACE,sBAAKR,UAAU,eAAf,UACE,uBAAOgB,QAAQ,QAAf,6BACE,uBACEC,KAAK,OACLC,GAAG,QACHC,MAAOb,EACPc,SAAU,SAAAT,GACRJ,EAAgBI,EAAMU,OAAOF,aAMrC,sBAAKnB,UAAU,eAAf,UACE,uBAAOgB,QAAQ,SAAf,sBACE,uBACEC,KAAK,SACLC,GAAG,SACHC,MAAOX,EACPY,SAAU,SAAAT,GACVF,EAAiBE,EAAMU,OAAOF,aAMpC,qBAAKnB,UAAU,2BAAf,SACE,wBAAQiB,KAAK,SAAb,yCCGGK,G,MAhDAnB,IAAMC,MAAK,SAAAL,GAExB,IAAOwB,EAAqBxB,EAArBwB,kBACP,EAAyClB,mBAAS,IAAlD,mBAAOmB,EAAP,KAAqBC,EAArB,KACMC,EAAWC,mBA2BjB,OAzBAC,qBAAU,WAEZ,IAAMC,EAAUC,YAAW,WAEvB,GAAGN,IAAkBE,EAASK,QAAQZ,MAAM,CAC1C,IAAMa,EAAiC,IAAzBR,EAAcS,OAAc,GAA5B,oCAA4DT,EAA5D,KACdU,MAAM,yEAA2EF,GAChFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAoB,GACxB,IAAI,IAAMC,KAAOF,EACfC,EAAkBE,KAAK,CACrBvB,GAAGsB,EACH1B,MAAMwB,EAAaE,GAAK1B,MACxBC,OAAOuB,EAAaE,GAAKzB,SAG7BQ,EAAkBgB,SAGxB,KACF,OAAO,WAAOG,aAAab,MACzB,CAACL,EAAcD,EAAkBG,IAIjC,yBAAS1B,UAAU,SAAnB,SACE,cAAC,EAAD,UACE,sBAAKA,UAAU,eAAf,UACE,oDACA,uBACAiB,KAAK,OACLE,MAAOK,EACPmB,IAAOjB,EACPN,SAAU,SAAAT,GAAK,OAAIc,EAAiBd,EAAMU,OAAOF,qBC1B5CyB,G,YAhBQ,SAAA7C,GACrB,OACE,0BAASC,UAAU,kBAAnB,UACE,oDACA,6BACGD,EAAM8C,YAAYC,KAAI,SAAAC,GAAE,OACvB,qBAAgBC,QAASjD,EAAMkD,aAAaC,K,UAAWH,EAAG7B,IAA1D,UACE,+BAAO6B,EAAGjC,QACV,iCAAOiC,EAAGhC,OAAV,SAFOgC,EAAG7B,cCsFP2B,EAxFK,WAElB,MAA+CxC,mBAAS,IAAxD,mBAAO8C,EAAP,KAAyBC,EAAzB,KACA,EAAyB/C,oBAAS,GAAlC,mBAAOgD,EAAP,KAAaC,EAAb,KACA,EAA+BjD,oBAAS,GAAxC,mBAmBQkD,GAnBR,UAmBqCC,uBAAY,SAAAC,GAC7CL,EAAmBK,GACnBH,GAAS,KAET,KA8BCI,EAAO,qBAAK1D,UAAU,SAAf,wBAQZ,OAPIqD,IACAK,EAAQ,cAAC,EAAD,CAAgBb,YAAcM,EACtCF,aAb4B,SAAAU,GAC5BzB,MAAM,qEAAD,OAAsEyB,EAAtE,SAA0F,CAC7FC,OAAO,WACNzB,MAAK,SAAAC,GACNgB,GAAmB,SAAAS,GAAe,OAChCA,EAAgBC,QAAO,SAAAC,GAAU,OAAIA,EAAW7C,KAAOyC,eAc3D,sBAAK3D,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CACIa,gBAtCmB,SAAAkD,GACzB7B,MAAM,yEAAyE,CAC7E0B,OAAO,OACPI,KAAMC,KAAKC,UAAUH,GACrBI,QAAQ,CAAC,eAAiB,sBACzBhC,MAAK,SAAAC,GACN,OAAOA,EAASC,QACfF,MAAK,SAAAG,GACNc,GAAmB,SAAAS,GAAe,4BAC7BA,GAD6B,cAE/B3C,GAAIoB,EAAa8B,MAAQL,cA+B5B,oCAEG,cAAC,EAAD,CACExC,kBAAqBgC,IAIrBG,SC/EAW,EAJH,SAAAtE,GACV,OAAO,cAAC,EAAD,KCETuE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d0abe0c0.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\n\nexport default Card;\n","import React ,{useState} from 'react';\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount,setEnteredAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({\n      title:enteredTitle,\n      amount:enteredAmount \n    });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      \n      <Card>\n\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Ingredient Name</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={enteredTitle}\n                onChange={event => {\n                  setEnteredTitle(event.target.value)\n                }}\n\n            />\n          </div>\n\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">How Much</label>\n              <input\n                type=\"number\"\n                id=\"amount\"\n                value={enteredAmount}\n                onChange={event => {\n                setEnteredAmount(event.target.value)\n                }}\n            />\n\n          </div>\n          \n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n          </div>\n          \n        </form>\n      </Card>\n\n    </section>\n  );\n});\n\nexport default IngredientForm;","import React, { useEffect, useState  , useRef } from 'react';\nimport Card from '../UI/Card';\nimport './Search.css';\n\n\nconst Search = React.memo(props => {\n \n  const {onLoadIngredients} = props   \n  const [enteredFilter,setEnteredFilter] = useState('') \n  const inputRef = useRef()\n\n  useEffect(()=>{\n  \nconst timer =   setTimeout(() => {\n\n    if(enteredFilter === inputRef.current.value){    \n      const query = enteredFilter.length === 0 ?'':`?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n      fetch('https://react-hooks-9edb5-default-rtdb.firebaseio.com/ingredients.json' + query)\n      .then(response => response.json())\n      .then(responseData => {\n        const loadedIngredients = [];\n          for(const key in responseData){\n            loadedIngredients.push({\n              id:key,\n              title:responseData[key].title,\n              amount:responseData[key].amount\n            });\n          } \n          onLoadIngredients(loadedIngredients)\n      })\n    }\n  },500)\n  return () => {clearTimeout(timer)}     \n  },[enteredFilter,onLoadIngredients,inputRef])\n\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input \n          type=\"text\" \n          value={enteredFilter}\n          ref = {inputRef} \n          onChange={event => setEnteredFilter(event.target.value)}/>\n        </div>\n      </Card>\n    </section>\n  );\n});\n\n\nexport default Search;\n","import React from 'react';\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.Ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","\nimport React , { useState , useCallback} from 'react';\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport './ingredient.css'\nimport IngredientList from './IngredientList' \n\nconst Ingredients = () => {\n  \n  const [userIngredients , setUserIngredients] = useState([])\n  const [check,setCheck] = useState(false)\n  const [newCheck,setNewCheck] = useState(false)  \n  // useEffect(()=>{ \n  //   fetch('https://react-hooks-9edb5-default-rtdb.firebaseio.com/ingredients.json')\n  //   .then(response => response.json())\n  //   .then(responseData => {\n  //     const loadedIngredients = [];\n  //       for(const key in responseData){\n  //         loadedIngredients.push({\n  //           id:key,\n  //           title:responseData[key].title,\n  //           amount:responseData[key].amount\n  //         });\n  //       } \n  //       setUserIngredients(loadedIngredients)\n  //   })\n  // },[]);\n\n\n\n    const filteredIngredientsHandler = useCallback(filterIngredients =>{\n      setUserIngredients(filterIngredients)\n      setCheck(true)\n      \n    },[])\n\n  \n\n    const addIngredientHandler = ingredient =>{\n        fetch('https://react-hooks-9edb5-default-rtdb.firebaseio.com/ingredients.json',{\n          method:'POST',\n          body: JSON.stringify(ingredient),\n          headers:{'Content-Type' : 'application/json'}\n        }).then(response => {\n          return response.json\n        }).then(responseData => {\n          setUserIngredients(prevIngredients =>[\n            ...prevIngredients,\n            {id: responseData.name,...ingredient}\n            ])\n        })\n    }\n\n\n  const removeIngredientHandler = ingredientId =>{\n      fetch(`https://react-hooks-9edb5-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,{\n        method:'DELETE'\n      }).then(response =>{\n        setUserIngredients(prevIngredients =>\n          prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n          )\n      })\n  }\n\n  let  list = <div className=\"loader\">Loading...</div>   \n   if(check){\n      list  = <IngredientList Ingredients ={userIngredients} \n      onRemoveItem = {removeIngredientHandler}/>\n    }\n  \n\n\n  return (  \n      <div className=\"App\">\n          <h2>INGREDIENT TODO</h2>\n          <IngredientForm \n              onAddIngredient = {addIngredientHandler}\n          /> \n          \n          <section>\n             \n             <Search \n               onLoadIngredients = {filteredIngredientsHandler}\n              />\n\n              {/* Need to add list here! */}\n              {list}\n    \n          </section>\n\n      </div>\n    );\n\n}\n\nexport default Ingredients;\n\n\n","import React from 'react';\nimport Ingredients from './components/Ingredients/Ingredients';\n\nconst App = props => {\n  return <Ingredients />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}